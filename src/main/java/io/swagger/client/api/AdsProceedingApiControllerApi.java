/*
 * Ehr ads api
 * Ehitisregistri ads teenus. Kood asub: https://git.mkm.ee/ehr/ehr-k8s-pipeline/ehr-ads-api
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiCallback;
import io.swagger.client.ApiClient;
import io.swagger.client.ApiException;
import io.swagger.client.ApiResponse;
import io.swagger.client.Configuration;
import io.swagger.client.Pair;
import io.swagger.client.ProgressRequestBody;
import io.swagger.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import io.swagger.client.model.AdsNecessitiesDTO;
import io.swagger.client.model.AdsProceedingsDTO;
import io.swagger.client.model.AdsRequestsXmlDTO;
import io.swagger.client.model.BuildingDTO;
import io.swagger.client.model.BuildingsDTO;
import io.swagger.client.model.ProceedingsDTO;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AdsProceedingApiControllerApi {
    private ApiClient apiClient;

    public AdsProceedingApiControllerApi() {
        this(Configuration.getDefaultApiClient());
    }

    public AdsProceedingApiControllerApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for adsProceedingXml
     * @param body  (required)
     * @param adsType Ads andmete korjamise tüüp.Send korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund tuleb reeglite järgi.Delete korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund on T.Restore korjab kokku ruumikujud ja osad, mille seisund on ads_esitatud.Kui eksisteerib A seisundis objekt, siis tehakse andmete vahetus restore korral. Ülejäänud saavad seisundi T. Mõeldud taastamiseks. (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call adsProceedingXmlCall(List<BuildingDTO> body, String adsType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/proceeding/{adsType}/xml"
            .replaceAll("\\{" + "adsType" + "\\}", apiClient.escapeString(adsType.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call adsProceedingXmlValidateBeforeCall(List<BuildingDTO> body, String adsType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling adsProceedingXml(Async)");
        }
        // verify the required parameter 'adsType' is set
        if (adsType == null) {
            throw new ApiException("Missing the required parameter 'adsType' when calling adsProceedingXml(Async)");
        }
        
        com.squareup.okhttp.Call call = adsProceedingXmlCall(body, adsType, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Tagastab ehitise ads päringu xml
     * Korjab ehitise ads päringu xml kokku /do/{adsType} loogika järgi. Päringut ei tehta.
     * @param body  (required)
     * @param adsType Ads andmete korjamise tüüp.Send korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund tuleb reeglite järgi.Delete korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund on T.Restore korjab kokku ruumikujud ja osad, mille seisund on ads_esitatud.Kui eksisteerib A seisundis objekt, siis tehakse andmete vahetus restore korral. Ülejäänud saavad seisundi T. Mõeldud taastamiseks. (required)
     * @return AdsRequestsXmlDTO
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public AdsRequestsXmlDTO adsProceedingXml(List<BuildingDTO> body, String adsType) throws ApiException {
        ApiResponse<AdsRequestsXmlDTO> resp = adsProceedingXmlWithHttpInfo(body, adsType);
        return resp.getData();
    }

    /**
     * Tagastab ehitise ads päringu xml
     * Korjab ehitise ads päringu xml kokku /do/{adsType} loogika järgi. Päringut ei tehta.
     * @param body  (required)
     * @param adsType Ads andmete korjamise tüüp.Send korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund tuleb reeglite järgi.Delete korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund on T.Restore korjab kokku ruumikujud ja osad, mille seisund on ads_esitatud.Kui eksisteerib A seisundis objekt, siis tehakse andmete vahetus restore korral. Ülejäänud saavad seisundi T. Mõeldud taastamiseks. (required)
     * @return ApiResponse&lt;AdsRequestsXmlDTO&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<AdsRequestsXmlDTO> adsProceedingXmlWithHttpInfo(List<BuildingDTO> body, String adsType) throws ApiException {
        com.squareup.okhttp.Call call = adsProceedingXmlValidateBeforeCall(body, adsType, null, null);
        Type localVarReturnType = new TypeToken<AdsRequestsXmlDTO>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Tagastab ehitise ads päringu xml (asynchronously)
     * Korjab ehitise ads päringu xml kokku /do/{adsType} loogika järgi. Päringut ei tehta.
     * @param body  (required)
     * @param adsType Ads andmete korjamise tüüp.Send korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund tuleb reeglite järgi.Delete korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund on T.Restore korjab kokku ruumikujud ja osad, mille seisund on ads_esitatud.Kui eksisteerib A seisundis objekt, siis tehakse andmete vahetus restore korral. Ülejäänud saavad seisundi T. Mõeldud taastamiseks. (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call adsProceedingXmlAsync(List<BuildingDTO> body, String adsType, final ApiCallback<AdsRequestsXmlDTO> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = adsProceedingXmlValidateBeforeCall(body, adsType, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<AdsRequestsXmlDTO>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for checkAdsProceeding
     * @param body  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call checkAdsProceedingCall(ProceedingsDTO body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/proceeding/check";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call checkAdsProceedingValidateBeforeCall(ProceedingsDTO body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling checkAdsProceeding(Async)");
        }
        
        com.squareup.okhttp.Call call = checkAdsProceedingCall(body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Kontrollib adsis olevat menetlust. Õnnestumise korral salvestakse andmed.
     * Teeb ads menetlusnumbri korral adsi päringu. Päringu kehas peab olema selle menetlusnumbri ehitis. Puudumise korral andmeid ei salvestada.
     * @param body  (required)
     * @return AdsProceedingsDTO
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public AdsProceedingsDTO checkAdsProceeding(ProceedingsDTO body) throws ApiException {
        ApiResponse<AdsProceedingsDTO> resp = checkAdsProceedingWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * Kontrollib adsis olevat menetlust. Õnnestumise korral salvestakse andmed.
     * Teeb ads menetlusnumbri korral adsi päringu. Päringu kehas peab olema selle menetlusnumbri ehitis. Puudumise korral andmeid ei salvestada.
     * @param body  (required)
     * @return ApiResponse&lt;AdsProceedingsDTO&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<AdsProceedingsDTO> checkAdsProceedingWithHttpInfo(ProceedingsDTO body) throws ApiException {
        com.squareup.okhttp.Call call = checkAdsProceedingValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<AdsProceedingsDTO>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Kontrollib adsis olevat menetlust. Õnnestumise korral salvestakse andmed. (asynchronously)
     * Teeb ads menetlusnumbri korral adsi päringu. Päringu kehas peab olema selle menetlusnumbri ehitis. Puudumise korral andmeid ei salvestada.
     * @param body  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call checkAdsProceedingAsync(ProceedingsDTO body, final ApiCallback<AdsProceedingsDTO> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = checkAdsProceedingValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<AdsProceedingsDTO>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for checkAdsRequest
     * @param body  (required)
     * @param adsType Ads andmete korjamise tüüp.Send korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund tuleb reeglite järgi.Delete korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund on T.Restore korjab kokku ruumikujud ja osad, mille seisund on ads_esitatud.Kui eksisteerib A seisundis objekt, siis tehakse andmete vahetus restore korral. Ülejäänud saavad seisundi T. Mõeldud taastamiseks. (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call checkAdsRequestCall(BuildingsDTO body, String adsType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/proceeding/{adsType}/check"
            .replaceAll("\\{" + "adsType" + "\\}", apiClient.escapeString(adsType.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call checkAdsRequestValidateBeforeCall(BuildingsDTO body, String adsType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling checkAdsRequest(Async)");
        }
        // verify the required parameter 'adsType' is set
        if (adsType == null) {
            throw new ApiException("Missing the required parameter 'adsType' when calling checkAdsRequest(Async)");
        }
        
        com.squareup.okhttp.Call call = checkAdsRequestCall(body, adsType, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Teeb adsi kontrollpäringu (SEND, DELETE, RESTORE). Andmeid ei salvestada.
     * Teeb ads kontrollpäringu ehitise andmete põhjal. Tuleb eristada SEND, DELETE ja RESTORE ads seisundit. SEND korral kogutakse kokku ehitise osad ja ruumikujud, mille adsi esitamise seisund on ADS_ESITAMATA.SEND korral sõltub osa ja ruumikuju ads seisund reeglitest.DELETE korral kogutakse kokku ehitise osad ja ruumikuju ning ads seisund pannakse neile T. Vaadatakse esitamise seisundit ADS_ESITAMATA.RESTORE korral asendakse osa või kuju andmed ära aktuaalsetega, kui aktuaalne eksisteerib ning ads seisund pannakse reeglite järgi. Muidu saab ads seisundi T.
     * @param body  (required)
     * @param adsType Ads andmete korjamise tüüp.Send korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund tuleb reeglite järgi.Delete korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund on T.Restore korjab kokku ruumikujud ja osad, mille seisund on ads_esitatud.Kui eksisteerib A seisundis objekt, siis tehakse andmete vahetus restore korral. Ülejäänud saavad seisundi T. Mõeldud taastamiseks. (required)
     * @return AdsProceedingsDTO
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public AdsProceedingsDTO checkAdsRequest(BuildingsDTO body, String adsType) throws ApiException {
        ApiResponse<AdsProceedingsDTO> resp = checkAdsRequestWithHttpInfo(body, adsType);
        return resp.getData();
    }

    /**
     * Teeb adsi kontrollpäringu (SEND, DELETE, RESTORE). Andmeid ei salvestada.
     * Teeb ads kontrollpäringu ehitise andmete põhjal. Tuleb eristada SEND, DELETE ja RESTORE ads seisundit. SEND korral kogutakse kokku ehitise osad ja ruumikujud, mille adsi esitamise seisund on ADS_ESITAMATA.SEND korral sõltub osa ja ruumikuju ads seisund reeglitest.DELETE korral kogutakse kokku ehitise osad ja ruumikuju ning ads seisund pannakse neile T. Vaadatakse esitamise seisundit ADS_ESITAMATA.RESTORE korral asendakse osa või kuju andmed ära aktuaalsetega, kui aktuaalne eksisteerib ning ads seisund pannakse reeglite järgi. Muidu saab ads seisundi T.
     * @param body  (required)
     * @param adsType Ads andmete korjamise tüüp.Send korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund tuleb reeglite järgi.Delete korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund on T.Restore korjab kokku ruumikujud ja osad, mille seisund on ads_esitatud.Kui eksisteerib A seisundis objekt, siis tehakse andmete vahetus restore korral. Ülejäänud saavad seisundi T. Mõeldud taastamiseks. (required)
     * @return ApiResponse&lt;AdsProceedingsDTO&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<AdsProceedingsDTO> checkAdsRequestWithHttpInfo(BuildingsDTO body, String adsType) throws ApiException {
        com.squareup.okhttp.Call call = checkAdsRequestValidateBeforeCall(body, adsType, null, null);
        Type localVarReturnType = new TypeToken<AdsProceedingsDTO>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Teeb adsi kontrollpäringu (SEND, DELETE, RESTORE). Andmeid ei salvestada. (asynchronously)
     * Teeb ads kontrollpäringu ehitise andmete põhjal. Tuleb eristada SEND, DELETE ja RESTORE ads seisundit. SEND korral kogutakse kokku ehitise osad ja ruumikujud, mille adsi esitamise seisund on ADS_ESITAMATA.SEND korral sõltub osa ja ruumikuju ads seisund reeglitest.DELETE korral kogutakse kokku ehitise osad ja ruumikuju ning ads seisund pannakse neile T. Vaadatakse esitamise seisundit ADS_ESITAMATA.RESTORE korral asendakse osa või kuju andmed ära aktuaalsetega, kui aktuaalne eksisteerib ning ads seisund pannakse reeglite järgi. Muidu saab ads seisundi T.
     * @param body  (required)
     * @param adsType Ads andmete korjamise tüüp.Send korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund tuleb reeglite järgi.Delete korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund on T.Restore korjab kokku ruumikujud ja osad, mille seisund on ads_esitatud.Kui eksisteerib A seisundis objekt, siis tehakse andmete vahetus restore korral. Ülejäänud saavad seisundi T. Mõeldud taastamiseks. (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call checkAdsRequestAsync(BuildingsDTO body, String adsType, final ApiCallback<AdsProceedingsDTO> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = checkAdsRequestValidateBeforeCall(body, adsType, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<AdsProceedingsDTO>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for isAdsNecessary
     * @param body  (required)
     * @param adsType Ads andmete korjamise tüüp.Send korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund tuleb reeglite järgi.Delete korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund on T.Restore korjab kokku ruumikujud ja osad, mille seisund on ads_esitatud.Kui eksisteerib A seisundis objekt, siis tehakse andmete vahetus restore korral. Ülejäänud saavad seisundi T. Mõeldud taastamiseks. (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call isAdsNecessaryCall(List<BuildingDTO> body, String adsType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/proceeding/{adsType}/check/necessity"
            .replaceAll("\\{" + "adsType" + "\\}", apiClient.escapeString(adsType.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call isAdsNecessaryValidateBeforeCall(List<BuildingDTO> body, String adsType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling isAdsNecessary(Async)");
        }
        // verify the required parameter 'adsType' is set
        if (adsType == null) {
            throw new ApiException("Missing the required parameter 'adsType' when calling isAdsNecessary(Async)");
        }
        
        com.squareup.okhttp.Call call = isAdsNecessaryCall(body, adsType, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Kontrollib ads vajadust (vaatab ads_esitamise seisundit)
     * Kontrollib ehitise ads esitamise seisundit ja tagastab, et kas on vaja esitada.
     * @param body  (required)
     * @param adsType Ads andmete korjamise tüüp.Send korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund tuleb reeglite järgi.Delete korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund on T.Restore korjab kokku ruumikujud ja osad, mille seisund on ads_esitatud.Kui eksisteerib A seisundis objekt, siis tehakse andmete vahetus restore korral. Ülejäänud saavad seisundi T. Mõeldud taastamiseks. (required)
     * @return AdsNecessitiesDTO
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public AdsNecessitiesDTO isAdsNecessary(List<BuildingDTO> body, String adsType) throws ApiException {
        ApiResponse<AdsNecessitiesDTO> resp = isAdsNecessaryWithHttpInfo(body, adsType);
        return resp.getData();
    }

    /**
     * Kontrollib ads vajadust (vaatab ads_esitamise seisundit)
     * Kontrollib ehitise ads esitamise seisundit ja tagastab, et kas on vaja esitada.
     * @param body  (required)
     * @param adsType Ads andmete korjamise tüüp.Send korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund tuleb reeglite järgi.Delete korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund on T.Restore korjab kokku ruumikujud ja osad, mille seisund on ads_esitatud.Kui eksisteerib A seisundis objekt, siis tehakse andmete vahetus restore korral. Ülejäänud saavad seisundi T. Mõeldud taastamiseks. (required)
     * @return ApiResponse&lt;AdsNecessitiesDTO&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<AdsNecessitiesDTO> isAdsNecessaryWithHttpInfo(List<BuildingDTO> body, String adsType) throws ApiException {
        com.squareup.okhttp.Call call = isAdsNecessaryValidateBeforeCall(body, adsType, null, null);
        Type localVarReturnType = new TypeToken<AdsNecessitiesDTO>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Kontrollib ads vajadust (vaatab ads_esitamise seisundit) (asynchronously)
     * Kontrollib ehitise ads esitamise seisundit ja tagastab, et kas on vaja esitada.
     * @param body  (required)
     * @param adsType Ads andmete korjamise tüüp.Send korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund tuleb reeglite järgi.Delete korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund on T.Restore korjab kokku ruumikujud ja osad, mille seisund on ads_esitatud.Kui eksisteerib A seisundis objekt, siis tehakse andmete vahetus restore korral. Ülejäänud saavad seisundi T. Mõeldud taastamiseks. (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call isAdsNecessaryAsync(List<BuildingDTO> body, String adsType, final ApiCallback<AdsNecessitiesDTO> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = isAdsNecessaryValidateBeforeCall(body, adsType, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<AdsNecessitiesDTO>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for sendAdsRequest
     * @param body  (required)
     * @param adsType Ads andmete korjamise tüüp.Send korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund tuleb reeglite järgi.Delete korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund on T.Restore korjab kokku ruumikujud ja osad, mille seisund on ads_esitatud.Kui eksisteerib A seisundis objekt, siis tehakse andmete vahetus restore korral. Ülejäänud saavad seisundi T. Mõeldud taastamiseks. (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call sendAdsRequestCall(BuildingsDTO body, String adsType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/proceeding/do/{adsType}"
            .replaceAll("\\{" + "adsType" + "\\}", apiClient.escapeString(adsType.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call sendAdsRequestValidateBeforeCall(BuildingsDTO body, String adsType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling sendAdsRequest(Async)");
        }
        // verify the required parameter 'adsType' is set
        if (adsType == null) {
            throw new ApiException("Missing the required parameter 'adsType' when calling sendAdsRequest(Async)");
        }
        
        com.squareup.okhttp.Call call = sendAdsRequestCall(body, adsType, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Teeb adsi päringu (SEND, DELETE, RESTORE). Andmeid salvestakse õnnestumise korral.
     * Esitab ehitise andmed adsi. Tuleb eristada SEND, DELETE ja RESTORE ads seisundit. SEND korral kogutakse kokku ehitise osad ja ruumikujud, mille adsi esitamise seisund on ADS_ESITAMATA.SEND korral sõltub osa ja ruumikuju ads seisund reeglitest.DELETE korral kogutakse kokku ehitise osad ja ruumikuju ning ads seisund pannakse neile T. Vaadatakse esitamise seisundit ADS_ESITAMATA.RESTORE korral asendakse osa või kuju andmed ära aktuaalsetega, kui aktuaalne eksisteerib ning ads seisund pannakse reeglite järgi. Muidu saab ads seisundi T.
     * @param body  (required)
     * @param adsType Ads andmete korjamise tüüp.Send korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund tuleb reeglite järgi.Delete korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund on T.Restore korjab kokku ruumikujud ja osad, mille seisund on ads_esitatud.Kui eksisteerib A seisundis objekt, siis tehakse andmete vahetus restore korral. Ülejäänud saavad seisundi T. Mõeldud taastamiseks. (required)
     * @return AdsProceedingsDTO
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public AdsProceedingsDTO sendAdsRequest(BuildingsDTO body, String adsType) throws ApiException {
        ApiResponse<AdsProceedingsDTO> resp = sendAdsRequestWithHttpInfo(body, adsType);
        return resp.getData();
    }

    /**
     * Teeb adsi päringu (SEND, DELETE, RESTORE). Andmeid salvestakse õnnestumise korral.
     * Esitab ehitise andmed adsi. Tuleb eristada SEND, DELETE ja RESTORE ads seisundit. SEND korral kogutakse kokku ehitise osad ja ruumikujud, mille adsi esitamise seisund on ADS_ESITAMATA.SEND korral sõltub osa ja ruumikuju ads seisund reeglitest.DELETE korral kogutakse kokku ehitise osad ja ruumikuju ning ads seisund pannakse neile T. Vaadatakse esitamise seisundit ADS_ESITAMATA.RESTORE korral asendakse osa või kuju andmed ära aktuaalsetega, kui aktuaalne eksisteerib ning ads seisund pannakse reeglite järgi. Muidu saab ads seisundi T.
     * @param body  (required)
     * @param adsType Ads andmete korjamise tüüp.Send korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund tuleb reeglite järgi.Delete korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund on T.Restore korjab kokku ruumikujud ja osad, mille seisund on ads_esitatud.Kui eksisteerib A seisundis objekt, siis tehakse andmete vahetus restore korral. Ülejäänud saavad seisundi T. Mõeldud taastamiseks. (required)
     * @return ApiResponse&lt;AdsProceedingsDTO&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<AdsProceedingsDTO> sendAdsRequestWithHttpInfo(BuildingsDTO body, String adsType) throws ApiException {
        com.squareup.okhttp.Call call = sendAdsRequestValidateBeforeCall(body, adsType, null, null);
        Type localVarReturnType = new TypeToken<AdsProceedingsDTO>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Teeb adsi päringu (SEND, DELETE, RESTORE). Andmeid salvestakse õnnestumise korral. (asynchronously)
     * Esitab ehitise andmed adsi. Tuleb eristada SEND, DELETE ja RESTORE ads seisundit. SEND korral kogutakse kokku ehitise osad ja ruumikujud, mille adsi esitamise seisund on ADS_ESITAMATA.SEND korral sõltub osa ja ruumikuju ads seisund reeglitest.DELETE korral kogutakse kokku ehitise osad ja ruumikuju ning ads seisund pannakse neile T. Vaadatakse esitamise seisundit ADS_ESITAMATA.RESTORE korral asendakse osa või kuju andmed ära aktuaalsetega, kui aktuaalne eksisteerib ning ads seisund pannakse reeglite järgi. Muidu saab ads seisundi T.
     * @param body  (required)
     * @param adsType Ads andmete korjamise tüüp.Send korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund tuleb reeglite järgi.Delete korjab kokku ruumikujud ja osad, mille seisund on ads_esitamata. Ads seisund on T.Restore korjab kokku ruumikujud ja osad, mille seisund on ads_esitatud.Kui eksisteerib A seisundis objekt, siis tehakse andmete vahetus restore korral. Ülejäänud saavad seisundi T. Mõeldud taastamiseks. (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call sendAdsRequestAsync(BuildingsDTO body, String adsType, final ApiCallback<AdsProceedingsDTO> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = sendAdsRequestValidateBeforeCall(body, adsType, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<AdsProceedingsDTO>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
